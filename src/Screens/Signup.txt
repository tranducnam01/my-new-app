const express = require('express');
const mysql = require('mysql');
const bcrypt = require('bcrypt');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
app.use(bodyParser.json());
app.use(cors());

// Kết nối MySQL
const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',       
  password: '',      
  port: 3306,          
  database: 'myapp'   
});

db.connect(err => {
  if (err) {
    console.error('❌ Kết nối MySQL thất bại:', err);
    return;
  }
  console.log('✅ Kết nối MySQL thành công');
});

// API Đăng ký
app.post('/signup', async (req, res) => {
  const { name, email, password } = req.body;

  // Kiểm tra đã tồn tại email chưa
  db.query('SELECT * FROM users WHERE email = ?', [email], async (err, results) => {
    if (err) {
      console.error(err);
      return res.status(500).send({ success: false, message: 'Lỗi server' });
    }

    if (results.length > 0) {
      return res.send({ success: false, message: 'Email đã tồn tại' });
    }

    // Hash mật khẩu
    const hashedPassword = await bcrypt.hash(password, 10);

    // Thêm user vào DB
    const newUser = { name, email, password: hashedPassword };
    db.query('INSERT INTO users SET ?', newUser, (err, result) => {
      if (err) {
        console.error(err);
        return res.status(500).send({ success: false, message: 'Lỗi server' });
      }
      res.send({ success: true, message: 'Đăng ký thành công' });
    });
  });
});


// API Đăng nhập
app.post('/login', (req, res) => {
  const { email, password } = req.body;

  // Kiểm tra xem người dùng có nhập đủ email và password không
  if (!email || !password) {
    return res.send({ success: false, message: 'Vui lòng nhập đầy đủ email và mật khẩu' });
  }

  // Truy vấn dữ liệu từ MySQL để lấy thông tin người dùng theo email
  db.query('SELECT * FROM users WHERE email = ?', [email], async (err, results) => {
    if (err) {
      console.error('Lỗi truy vấn:', err);
      return res.status(500).send({ success: false, message: 'Lỗi server' });
    }

    // Kiểm tra xem có người dùng nào với email này không
    if (results.length === 0) {
      return res.send({ success: false, message: 'Email không tồn tại' });
    }

    // Lấy thông tin người dùng từ kết quả truy vấn
    const user = results[0];

    // Kiểm tra xem mật khẩu của người dùng có hợp lệ không
    if (!user.password) {
      return res.send({ success: false, message: 'Mật khẩu không hợp lệ' });
    }

    try {
      // So sánh mật khẩu người dùng nhập vào với mật khẩu đã mã hóa trong cơ sở dữ liệu
      const match = await bcrypt.compare(password, user.password);
      if (match) {
        res.send({ success: true, message: 'Đăng nhập thành công' });
      } else {
        res.send({ success: false, message: 'Mật khẩu không đúng' });
      }
    } catch (error) {
      console.error('Lỗi khi so sánh mật khẩu:', error);
      return res.send({ success: false, message: 'Lỗi khi đăng nhập' });
    }
  });
});



const PORT = 3000;
app.listen(PORT, '192.168.0.102', () => {
  console.log(`Server chạy tại http://192.168.0.102:${PORT}`);
});
