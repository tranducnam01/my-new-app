import { View, Text, ScrollView, Image, TextInput,Touchable, TouchableOpacity, Alert } from 'react-native'
import React, { useState } from 'react'
import { myColor, MyColor } from './../Utils/MyColor';
import { SafeAreaView } from 'react-native-safe-area-context';
import { StatusBar } from 'expo-status-bar';
import Ionicons from '@expo/vector-icons/Ionicons';
import { useNavigation } from "@react-navigation/native";
import { authentication,database } from '../../Firebaseconfig';
import { createUserWithEmailAndPassword } from 'firebase/auth';
import {doc,setDoc} from "firebase/firestore";
import uuid from 'react-native-uuid';


const Signup = () => {
  const [isVisbile, setisVisbile] = useState(true);
  const [userCrendetails,setuserCrendetails] = useState({
    name:"",
    email:"",
    password:"",
  });
  const {email , password,name} =userCrendetails;
  console.log(name)

  const uid = uuid.v4()
  const userAccount =()=>{
  createUserWithEmailAndPassword(authentication,email, password)
  .then(() => {
    Alert.alert('User account created & signed in!');
    setDoc(doc(database,"users",uid),{
      username:name,
      email:email,
      id:authentication.currentUser.uid
    });
  })
  .catch(error => {
    if (error.code === 'auth/email-already-in-use') {
      Alert.alert('That email address is already in use!');
      
    }

    if (error.code === 'auth/invalid-email') {
      Alert.alert('That email address is invalid!');
    }

    console.error(error);
  });
}
  const nav = useNavigation()
  return (
    <SafeAreaView style={{ flex: 1, backgroundColor: myColor.secondary }}>
      <StatusBar />
      <ScrollView style={{ flex: 1, paddingTop: 30 }}>
        <Image
          style={{ alignSelf: "center" }}
          source={require('../assets/icon.png')}
        />

        <View style={{ paddingHorizontal: 20, marginTop: 50 }}>
          <Text style={{ color: myColor.third, fontSize: 24, fontWeight: '500' }}>Sign Up</Text>
          <Text style={{ fontSize: 16, fontWeight: '400', color: 'grey', margin: 10 }}>Enter  credentails to continue </Text>

          <Text style={{ fontSize: 16, fontWeight: '500', color: 'grey', marginTop: 40 }}>UserName</Text>
          <TextInput
          
          maxLength={20}
          value={name}
          onChangeText={(val)=>
            setuserCrendetails({...userCrendetails,name:val})
          }
          keyboardType="name-phone-pad" style={{ borderColor: '#E3E3E3', borderBottomWidth: 3, fontSize: 16, marginTop: 15 }} />

          <Text style={{ fontSize: 16, fontWeight: '500', color: 'grey', marginTop: 30 }}>Email</Text>
          <TextInput 
             value ={email}
             onChangeText ={(val) =>{
               setuserCrendetails ({...userCrendetails,email:val});
             }}
          maxLength={20} keyboardType="email-address" style={{ borderColor: '#E3E3E3', borderBottomWidth: 3, fontSize: 16, marginTop: 15 }} />

          <Text style={{ fontSize: 16, fontWeight: '500', color: 'grey', marginTop: 30 }}>Password</Text>
          <View style={{ borderColor: "E3E3E3", borderBottomWidth: 3, flexDirection: "row", justifyContent: "space-between", alignItems: 'center' }}>
            <TextInput    
            value ={password}
          onChangeText ={(val) =>{
            setuserCrendetails ({...userCrendetails,password:val});
          }} secureTextEntry={isVisbile} maxLength={6} keyboardType="ascii-capable"
              style={{

                fontSize: 17,
                marginTop: 15,
                flex: 0.9,
              }} />
            <Ionicons onPress={
              () => {
                setisVisbile(!isVisbile)
              }} 
              name={isVisbile == true ? "eye-off-outline" : 'eye-outline'}
               size={24} 
               color="black" 
               />
          </View>
          <Text numberOfLines={2}  style={{fontSize:14,fontWeight:'400',color:"black",marginTop:15,letterSpacing:0.7,lineHeight:20,width:'95%', opacity:0.7}}>By continue your agree to our Terms of Service and Provacy Policy</Text>
              <TouchableOpacity 
              onPress={userAccount}
              style={{backgroundColor:myColor.primary,marginTop:30,height:70,borderRadius:20,justifyContent:'center',alignItems:"center"}}>
                <Text style={{fontSize:19,color:myColor.secondary,fontWeight:'500'}}>Sign Up</Text>
              </TouchableOpacity>
              <View style={{flexDirection:"row",justifyContent:'center',alignItems:"center",marginTop:20,
                gap:5
              }}>
                <Text style={{fontSize:16}}>Already have an account?</Text>
                <TouchableOpacity    
                onPress={()=>{
                    nav.navigate('Login')
                  }}>
                <Text style={{fontSize:15,color:myColor.primary}}>Login Now</Text>

                </TouchableOpacity>
         
              </View>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

export default Signup

import React, { useState } from 'react';
import {
  View,
  Text,
  ScrollView,
  Image,
  TextInput,
  TouchableOpacity,
  Alert,
} from 'react-native';

import { SafeAreaView } from 'react-native-safe-area-context';
import { StatusBar } from 'expo-status-bar';
import Ionicons from '@expo/vector-icons/Ionicons';
import { useNavigation } from '@react-navigation/native';

import { myColor } from './../Utils/MyColor';  // giữ lại nếu bạn dùng file màu tùy chỉnh
import uuid from 'react-native-uuid';


const Signup = () => {
  const [isVisbile, setisVisbile] = useState(true);
  const [userCrendetails,setuserCrendetails] = useState({
    name:"",
    email:"",
    password:"",
  });
  const {email , password,name} =userCrendetails;
  console.log(name)

  const uid = uuid.v4()
  const userAccount = () => {
    if (!name || !email || !password) {
      Alert.alert('⚠️ Vui lòng nhập đầy đủ thông tin!');
      return;
    }
    fetch('http://172.20.10.3:3000/signup', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        name: name,
        email: email,
        password: password
      })
    })
    .then(async res => {
      nav.navigate('Login')
      const data = await res.json();
  
      if (!res.ok) {
        if (data.message === 'Email đã được sử dụng') {
          Alert.alert('❌ Email này đã tồn tại!');
        } else if (data.message === 'Tên người dùng đã tồn tại') {
          Alert.alert('❌ Tên người dùng đã tồn tại!');
        } else {
          Alert.alert('❌ Đăng ký thất bại', data.message || 'Có lỗi xảy ra');
        }
      } else {
        Alert.alert('✅ Tạo tài khoản thành công!');
        // Chuyển hướng sang Login hoặc reset form tại đây nếu cần
      }
    })
    .catch(error => {
      console.error('Error:', error);
      Alert.alert('⚠️ Lỗi kết nối máy chủ');
    });
  };
  
  
  const nav = useNavigation()
  return (
    <SafeAreaView style={{ flex: 1, backgroundColor: myColor.secondary }}>
      <StatusBar />
      <ScrollView style={{ flex: 1, paddingTop: 30 }}>
        <Image
          style={{ alignSelf: "center" }}
          source={require('../assets/icon.png')}
        />

        <View style={{ paddingHorizontal: 20, marginTop: 50 }}>
          <Text style={{ color: myColor.third, fontSize: 24, fontWeight: '500' }}>Sign Up</Text>
          <Text style={{ fontSize: 16, fontWeight: '400', color: 'grey', margin: 10 }}>Enter  credentails to continue </Text>

          <Text style={{ fontSize: 16, fontWeight: '500', color: 'grey', marginTop: 40 }}>UserName</Text>
          <TextInput
          
          maxLength={20}
          value={name}
          onChangeText={(val)=>
            setuserCrendetails({...userCrendetails,name:val})
          }
          keyboardType="name-phone-pad" style={{ borderColor: '#E3E3E3', borderBottomWidth: 3, fontSize: 16, marginTop: 15 }} />

          <Text style={{ fontSize: 16, fontWeight: '500', color: 'grey', marginTop: 30 }}>Email</Text>
          <TextInput 
             value ={email}
             onChangeText ={(val) =>{
               setuserCrendetails ({...userCrendetails,email:val});
             }}
          maxLength={20} keyboardType="email-address" style={{ borderColor: '#E3E3E3', borderBottomWidth: 3, fontSize: 16, marginTop: 15 }} />

          <Text style={{ fontSize: 16, fontWeight: '500', color: 'grey', marginTop: 30 }}>Password</Text>
          <View style={{ borderColor: "E3E3E3", borderBottomWidth: 3, flexDirection: "row", justifyContent: "space-between", alignItems: 'center' }}>
            <TextInput    
            value ={password}
          onChangeText ={(val) =>{
            setuserCrendetails ({...userCrendetails,password:val});
          }} secureTextEntry={isVisbile} maxLength={6} keyboardType="ascii-capable"
              style={{

                fontSize: 17,
                marginTop: 15,
                flex: 0.9,
              }} />
            <Ionicons onPress={
              () => {
                setisVisbile(!isVisbile)
              }} 
              name={isVisbile == true ? "eye-off-outline" : 'eye-outline'}
               size={24} 
               color="black" 
               />
          </View>
          <Text numberOfLines={2}  style={{fontSize:14,fontWeight:'400',color:"black",marginTop:15,letterSpacing:0.7,lineHeight:20,width:'95%', opacity:0.7}}>By continue your agree to our Terms of Service and Provacy Policy</Text>
              <TouchableOpacity 
              onPress={userAccount}
              style={{backgroundColor:myColor.primary,marginTop:30,height:70,borderRadius:20,justifyContent:'center',alignItems:"center"}}>
                <Text style={{fontSize:19,color:myColor.secondary,fontWeight:'500'}}>Sign Up</Text>
              </TouchableOpacity>
              <View style={{flexDirection:"row",justifyContent:'center',alignItems:"center",marginTop:20,
                gap:5
              }}>
                <Text style={{fontSize:16}}>Already have an account?</Text>
                <TouchableOpacity    
                onPress={()=>{
                    nav.navigate('Login')
                  }}>
                <Text style={{fontSize:15,color:myColor.primary}}>Login Now</Text>

                </TouchableOpacity>
         
              </View>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

export default Signup